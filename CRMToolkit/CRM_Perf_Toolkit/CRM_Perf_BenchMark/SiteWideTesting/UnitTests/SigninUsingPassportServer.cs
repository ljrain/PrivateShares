//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.832
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CRM_Perf_BenchMark
{
	using System;
	using System.Collections.Generic;
	using System.Text;
	using Microsoft.VisualStudio.TestTools.WebTesting;
	using Microsoft.VisualStudio.TestTools.WebTesting.Rules;
	using System.Xml;


	public class SigninUsingPassportServer : WebTest
	{
		public void SigninUsingPassportServer_PreWebTest(object sender, PreWebTestEventArgs e)
		{
			user = EntityManager.Instance.GetNextUser();

			userlogin = user["passportname"];
			password = user["userpassword"];
			orgid = "{" + user["organizationid"] + "}";
			partner = user["partner"];

		}

		public void SigninUsingPassportServer_PostWebTest(object sender, PostWebTestEventArgs e)
		{
			EntityManager.Instance.FreeEntity(user);
		}

		public SigninUsingPassportServer()
		{
			XmlDocument xmlDoc = new XmlDocument();
			try
			{
				xmlDoc.Load("c:\\crmstress\\ConfigSettings.xml");
				XmlNode configsettings = xmlDoc.DocumentElement;

				XmlNode currentNode = configsettings.SelectSingleNode("sitewideconfig/portalsignin/details");

				if (currentNode != null)
				{
					if (currentNode.Attributes["passporturl"] != null)
					{
						passporturl = currentNode.Attributes["passporturl"].Value;
					}
				}
			}
			catch (Exception e)
			{
				throw e;
			}

			this.PreAuthenticate = true;
			PreWebTest += new EventHandler<PreWebTestEventArgs>(SigninUsingPassportServer_PreWebTest);
			PostWebTest += new EventHandler<PostWebTestEventArgs>(SigninUsingPassportServer_PostWebTest);
		}

		public override IEnumerator<WebTestRequest> GetRequestEnumerator()
		{
			url = string.Format("http://{0}/portal", partner);
			WebTestRequest request1 = new WebTestRequest(url);
			request1.ThinkTime = 4;
			yield return request1;

			url = string.Format("https://{0}/Portal/signin/signin.aspx", partner);
			WebTestRequest request2 = new WebTestRequest(url);
			request2.ThinkTime = 7;
			ExtractHiddenFields rule1 = new ExtractHiddenFields();
			rule1.ContextParameterName = "1";
			request2.ExtractValues += new EventHandler<ExtractionEventArgs>(rule1.Extract);
			ExtractHiddenFields rule2 = new ExtractHiddenFields();
			rule2.ContextParameterName = "c1d86cab-13f4-4d60-bbfe-d9a05643bc04";
			request2.ExtractValues += new EventHandler<ExtractionEventArgs>(rule2.Extract);
			yield return request2;

			WebTestRequest request3 = new WebTestRequest(passporturl);
			request3.Method = "POST";
			request3.Encoding = System.Text.Encoding.GetEncoding("iso-8859-1");
			request3.QueryStringParameters.Add("wa", "wsignin1.0", false, false);
			request3.QueryStringParameters.Add("rpsnv", "45", false, false);
			request3.QueryStringParameters.Add("ct", "1190759985", false, false);
			request3.QueryStringParameters.Add("rver", "4.5.2130.0", false, false);
			request3.QueryStringParameters.Add("wp", "NFS_2HR_0_COMPACT", false, false);
			request3.QueryStringParameters.Add("wreply", "https:%2F%2F" + partner + "%2FPortal%2Fsignin%2Fsignin.aspx%3Fmscrmurl" +
					"%3Dhttps%253A%252F%252F" + partner + "%252FPortal%252Fsignin%252Fsignin.aspx", false, false);
			request3.QueryStringParameters.Add("lc", "1033", false, false);
			request3.QueryStringParameters.Add("id", "64239", false, false);
			request3.QueryStringParameters.Add("bk", "1190759883", false, false);
			FormPostHttpBody request3Body = new FormPostHttpBody();
			request3Body.FormPostParameters.Add("PPSX", this.Context["$HIDDEN1.PPSX"].ToString());
			request3Body.FormPostParameters.Add("PwdPad", this.Context["$HIDDEN1.PwdPad"].ToString());
			request3Body.FormPostParameters.Add("login", userlogin);
			request3Body.FormPostParameters.Add("passwd", password);
			request3Body.FormPostParameters.Add("LoginOptions", "2");
			request3Body.FormPostParameters.Add("PPFT", this.Context["$HIDDEN1.PPFT"].ToString());
			request3.Body = request3Body;
			ExtractHiddenFields rule3 = new ExtractHiddenFields();
			rule3.ContextParameterName = "2";
			request3.ExtractValues += new EventHandler<ExtractionEventArgs>(rule3.Extract);
			yield return request3;

			WebTestRequest request4 = new WebTestRequest(url);
			request4.ThinkTime = 18;
			request4.Method = "POST";
			request4.Encoding = System.Text.Encoding.GetEncoding("iso-8859-1");
			request4.QueryStringParameters.Add("mscrmurl", "https%3A%2F%2F" + partner + "%2FPortal%2Fsignin%2Fsignin.aspx", false, false);
			request4.QueryStringParameters.Add("wa", "wsignin1.0", false, false);
			FormPostHttpBody request4Body = new FormPostHttpBody();
			request4Body.FormPostParameters.Add("NAPExp", this.Context["$HIDDEN2.NAPExp"].ToString());
			request4Body.FormPostParameters.Add("anid", this.Context["$HIDDEN2.anid"].ToString());
			request4Body.FormPostParameters.Add("NAP", this.Context["$HIDDEN2.NAP"].ToString());
			request4Body.FormPostParameters.Add("ANON", this.Context["$HIDDEN2.ANON"].ToString());
			request4Body.FormPostParameters.Add("ANONExp", this.Context["$HIDDEN2.ANONExp"].ToString());
			request4Body.FormPostParameters.Add("t", this.Context["$HIDDEN2.t"].ToString());
			request4.Body = request4Body;
			ExtractHiddenFields rule4 = new ExtractHiddenFields();
			rule4.ContextParameterName = "2";
			request4.ExtractValues += new EventHandler<ExtractionEventArgs>(rule4.Extract);
			ExtractRegularExpression rule5 = new ExtractRegularExpression();
			rule5.RegularExpression = "";
			rule5.IgnoreCase = false;
			rule5.Required = true;
			rule5.Index = 0;
			rule5.ContextParameterName = "";
			request4.ExtractValues += new EventHandler<ExtractionEventArgs>(rule5.Extract);
			ExtractText rule6 = new ExtractText();
			rule6.StartsWith = "";
			rule6.EndsWith = "";
			rule6.IgnoreCase = false;
			rule6.UseRegularExpression = false;
			rule6.Required = true;
			rule6.Index = 0;
			rule6.ContextParameterName = "";
			request4.ExtractValues += new EventHandler<ExtractionEventArgs>(rule6.Extract);
			yield return request4;

			WebTestRequest request5 = new WebTestRequest(url);
			request5.ThinkTime = 2;
			request5.Method = "POST";
			FormPostHttpBody request5Body = new FormPostHttpBody();
			request5Body.FormPostParameters.Add("__VIEWSTATE", this.Context["$HIDDEN2.__VIEWSTATE"].ToString());
			request5Body.FormPostParameters.Add("ctl00$globalPageContent$selOrg", orgid);
			request5Body.FormPostParameters.Add("__VIEWSTATEENCRYPTED", this.Context["$HIDDEN2.__VIEWSTATEENCRYPTED"].ToString());
			request5Body.FormPostParameters.Add("__EVENTVALIDATION", this.Context["$HIDDEN2.__EVENTVALIDATION"].ToString());
			request5.Body = request5Body;
			request5.FollowRedirects = false;
			yield return request5;

		}

		private CRMEntity user;
		private string userlogin;
		private string password;
		private string orgid;
		private string partner;
		private string url;
		private string passporturl;

	}
}
